ADD file:c477cb0e95c56b51e0b7353f3805165393689902b82a41bbe77dbef4b31667e1 in /
RUN [ -z "$(apt-get indextargets)" ]
RUN set -xe
   &&  echo '#!/bin/sh' > /usr/sbin/policy-rc.d
   &&  echo 'exit 101' >> /usr/sbin/policy-rc.d
   &&  chmod +x /usr/sbin/policy-rc.d
   &&  dpkg-divert --local --rename --add /sbin/initctl
   &&  cp -a /usr/sbin/policy-rc.d /sbin/initctl
   &&  sed -i 's/^exit.*/exit 0/' /sbin/initctl
   &&  echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup
   &&  echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean
   &&  echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean
   &&  echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean
   &&  echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/docker-no-languages
   &&  echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes
   &&  echo 'Apt::AutoRemove::SuggestsImportant "false";' > /etc/apt/apt.conf.d/docker-autoremove-suggests
RUN mkdir -p /run/systemd
   &&  echo 'docker' > /run/systemd/container
CMD ["/bin/bash"]
LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>
RUN apt-get update
   &&  apt-get install -y --no-install-recommends gnupg2 curl ca-certificates
   &&  curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add -
   &&  echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/cuda.list
   &&  echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list
   &&  apt-get purge --autoremove -y curl
   &&  rm -rf /var/lib/apt/lists/*
ENV CUDA_VERSION=10.1.243
ENV CUDA_PKG_VERSION=10-1=10.1.243-1
RUN apt-get update
   &&  apt-get install -y --no-install-recommends cuda-cudart-$CUDA_PKG_VERSION cuda-compat-10-1
   &&  ln -s cuda-10.1 /usr/local/cuda
   &&  rm -rf /var/lib/apt/lists/*
RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf
   &&  echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf
ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV NVIDIA_REQUIRE_CUDA=cuda>=10.1 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=396,driver<397 brand=tesla,driver>=410,driver<411
LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>
ENV NCCL_VERSION=2.4.8
RUN apt-get update
   &&  apt-get install -y --no-install-recommends cuda-libraries-$CUDA_PKG_VERSION cuda-nvtx-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda10.1
   &&  apt-mark hold libnccl2
   &&  rm -rf /var/lib/apt/lists/*
LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>
RUN apt-get update
   &&  apt-get install -y --no-install-recommends cuda-nvml-dev-$CUDA_PKG_VERSION cuda-command-line-tools-$CUDA_PKG_VERSION cuda-libraries-dev-$CUDA_PKG_VERSION cuda-minimal-build-$CUDA_PKG_VERSION libnccl-dev=$NCCL_VERSION-1+cuda10.1
   &&  rm -rf /var/lib/apt/lists/*
ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs
LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>
ENV CUDNN_VERSION=7.6.3.30
LABEL com.nvidia.cudnn.version=7.6.3.30
RUN apt-get update
   &&  apt-get install -y --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda10.1 libcudnn7-dev=$CUDNN_VERSION-1+cuda10.1
   &&  apt-mark hold libcudnn7
   &&  rm -rf /var/lib/apt/lists/*
MAINTAINER LU, ZHENG <zheng.lu.1985@outlook.com>
ARG DEBIAN_FRONTEND=noninteractive
|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c apt-get update
   &&  apt-get install -y software-properties-common build-essential git wget vim curl zip zlib1g-dev unzip pkg-config libblas-dev liblapack-dev python-dev python3-dev python3-pip python3-tk python3-wheel swig
   &&  ln -s /usr/bin/python3 /usr/local/bin/python
   &&  ln -s /usr/bin/pip3 /usr/local/bin/pip
   &&  pip install --upgrade pip
   &&  apt-get clean
   &&  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c wget --quiet https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh -O ~/anaconda.sh
   &&  /bin/bash ~/anaconda.sh -b -p /opt/conda
   &&  rm ~/anaconda.sh
   &&  echo "export PATH=/opt/conda/bin:$PATH" >> ~/.bashrc
|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c mkdir /workspace
WORKDIR /src
ARG BAZEL_VER=0.21.0
ENV BAZEL_VER=0.21.0
ENV BAZEL_INSTALLER=bazel-0.21.0-installer-linux-x86_64.sh
ENV BAZEL_URL=https://github.com/bazelbuild/bazel/releases/download/0.21.0/bazel-0.21.0-installer-linux-x86_64.sh
|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c wget $BAZEL_URL
   &&  wget $BAZEL_URL.sha256
   &&  sha256sum -c $BAZEL_INSTALLER.sha256
   &&  chmod +x $BAZEL_INSTALLER
   &&  ./$BAZEL_INSTALLER
   &&  rm /src/*
|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c pip3 config set global.index-url https://pypi.mirrors.ustc.edu.cn/simple/
|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c pip3 --no-cache-dir --default-timeout=1000 install numpy matplotlib scipy pandas jupyter jupyterlab scikit-learn seaborn torch torchvision
